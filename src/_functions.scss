@use "sass:math";

$columns: 12 !default;
$gutter: 30px !default;

///
/// You probably don't want to use this. See span().
///
/// If you insist, this returns an expression, meant for calc(), that
/// corresponds to the width of $n columns and the enclosed gutters.
///
@function grid-unit($n, $columns: $columns, $gutter: $gutter, $extra-gutters: 0) {
  @return unquote("#{math.div($n, $columns)*100%} + #{$gutter * math.div($n, $columns + $extra-gutters - 1)}");
}

///
/// Returns the width of $n columns of the grid and the enclosed gutters.
///
@function span($n, $columns: $columns, $gutter: $gutter) {
    @return calc(#{grid-unit($n, $columns, $gutter)});
}

///
/// Returns the width of a $n column offset on the grid, including the last
/// gutter.
///
@function left($n, $columns: $columns, $gutter: $gutter) {
    @return calc(#{grid-unit($n, $columns, $gutter, 1)});
}
@function right($n, $columns: $columns, $gutter: $gutter) {
    @return calc(#{grid-unit($n, $columns, $gutter, 1)});
}

///
/// Returns the width of $n columns of the grid along with both outer gutters.
///
@function gutter($n: 0, $columns: $columns, $gutter: $gutter) {
    @return calc(#{grid-unit($n, $columns, $gutter, 2)});
}

///
/// Mixin for wrapping items within a flex container.
///
@mixin wrap($n: 0, $columns: $columns, $gutter: $gutter) {
    width: span($n, $columns, $gutter);
    margin-bottom: gutter(0, $columns, $gutter);

    &:nth-child(n) {
        margin-right: gutter(0, $columns, $gutter);
    }

    &:nth-child(#{math.div($columns, $n)}n) {
        margin-right: 0;
    }
}

///
@mixin grid-utilities($columns: $columns, $gutter: $gutter) {
    &.-gutter {
        margin-left: gutter(0, $columns, $gutter);
    }

    @for $i from 1 through $columns {
        &.-span-#{$i} {
            flex: 0 0 auto;
            width: span($i, $columns, $gutter);
        }

        &.-left-#{$i} {
            margin-left: left($i, $columns, $gutter);
        }

        &.-right-#{$i} {
            margin-right: right($i, $columns, $gutter);
        }

        &.-gutter-#{$i} {
            margin-left: gutter($i, $columns, $gutter);
        }
    }
}
